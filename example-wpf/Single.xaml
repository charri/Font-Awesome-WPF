<Window x:Class="Example.FontAwesome.WPF.Single"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        Title="Single" Height="331" Width="375"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        >
    <Grid VerticalAlignment="Center" Margin="20">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <fa:ImageAwesome Icon="Flag" 
                         VerticalAlignment="Center" HorizontalAlignment="Center" 
                         Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                         Height="200"
                         Margin="0,0,0,20"
                         />

        <TextBlock Text="CSS Class Name" Grid.Column="0" Grid.Row="1" />
        <!-- You could also use {StaticRessource FromIconClassNameConverter} as the converter -->
        <TextBlock Text="{Binding Path=FontAwesomeIcon, Converter={fa:CssClassNameConverter Mode=FromIconToString}}" Grid.Column="1" Grid.Row="1" />

        <TextBlock Text="Description" Grid.Column="0" Grid.Row="2" />
        <TextBlock Text="{Binding Path=FontAwesomeIcon, Converter={fa:DescriptionConverter}}" Grid.Column="1" Grid.Row="2" />

        <!-- Enable if NuGet package is updated with Awesome.Content property -->
        
        <Button 
            Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
            fa:Awesome.Content="Flag" 
                TextElement.FontSize="28pt"  Width="64" Height="64" 
                VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0, 30, 0, 0" Background="White"/>
        
        <!-- NOTE: VS 2013 XAML Designer will show an empty box instead of actual glyph. It works fine at runtime. -->
    </Grid>
</Window>
